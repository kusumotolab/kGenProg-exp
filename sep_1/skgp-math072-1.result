Sat Jun 22 11:17:26 UTC 2019
/opt/apr-data/t-kuma-example/math072
java -jar /opt/apr-data/bin/kgp.jar --config kgenprog.toml
2019-06-22 11:17:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = 
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 20000
timeLimit = PT1H
testTimeLimit = PT10S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 1
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/t-kuma-example/math072
================================================================
2019-06-22 11:17:41 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-22 11:17:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 1, build-failed 8, syntax-invalid 1, redundant 0
Fitness: max 0.8333333333333334(1), min 0.8333333333333334(1), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-22 11:17:42 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-22 11:17:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, build-succeeded 3, build-failed 6, syntax-invalid 0, redundant 1
Fitness: max 1.0(1), min 0.8333333333333334(2), ave 0.888888888888889
----------------------------------------------------------------

2019-06-22 11:17:44 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-06-22 11:17:44 [main] [INFO]  KGenProgMain - GA stopped at the era of 2nd generation.
2019-06-22 11:17:44 [main] [INFO]  Patch - 
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -113,7 +113,6 @@
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
-            return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2019-06-22 11:17:45 [main] [INFO]  KGenProgMain - execution time: 3 seconds

real 18.548
user 55.110
sys  0.781
