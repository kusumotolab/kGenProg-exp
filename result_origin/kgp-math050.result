Sun Jun 16 06:25:33 UTC 2019
/opt/apr-data/example/math050
java -jar /opt/apr-data/bin/kgp.jar --config kgenprog.toml
2019-06-16 06:25:33 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = 
executionTests = [org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 0
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math050
================================================================
2019-06-16 06:25:38 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-16 06:25:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 1, build-failed 7, syntax-invalid 1, redundant 1
Fitness: max 0.8888888888888888(1), min 0.8888888888888888(1), ave 0.8888888888888888
----------------------------------------------------------------

2019-06-16 06:25:40 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-16 06:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 10, build-succeeded 4, build-failed 5, syntax-invalid 0, redundant 1
Fitness: max 1.0(1), min 0.4444444444444444(1), ave 0.8055555555555556
----------------------------------------------------------------

2019-06-16 06:25:43 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-06-16 06:25:43 [main] [INFO]  KGenProgMain - GA stopped at the era of 2nd generation.
2019-06-16 06:25:43 [main] [INFO]  Patch - 
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1166,8 +1166,6 @@
 
         /* a[0] * b[1] */
         split(b[1], ys);
-        splitMult(xs, ys, zs);
-
         double tmp = result[0] + zs[0];
         result[1] = result[1] - (tmp - result[0] - zs[0]);
         result[0] = tmp;
2019-06-16 06:25:43 [main] [INFO]  Patch - 
--- org.apache.commons.math.analysis.solvers.BaseSecantSolver
+++ org.apache.commons.math.analysis.solvers.BaseSecantSolver
@@ -175,24 +175,6 @@
                 f0 = f1;
                 inverted = !inverted;
             } else {
-                switch (method) {
-                case ILLINOIS:
-                    f0 *= 0.5;
-                    break;
-                case PEGASUS:
-                    f0 *= f1 / (f1 + fx);
-                    break;
-                case REGULA_FALSI:
-                    // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
-                    break;
-                default:
-                    // Should never happen.
-                    throw new MathInternalError();
-                }
             }
             // Update from [x0, x1] to [x0, x].
             x1 = x;
2019-06-16 06:25:43 [main] [INFO]  KGenProgMain - execution time: 5 seconds

real 10.352
user 52.094
sys  1.054
