Wed Jun 12 18:02:14 UTC 2019
/opt/apr-data/example/math078
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.ode.events.EventStateTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 0 --random-seed 0 -o /opt/apr-data/tmp
JUNIT4_CUSTOM
2019-06-12 18:02:14 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.ode.events.EventStateTest]
workingDir = /tmp/kgenprog-work8938520363389006952
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 0
scope = PACKAGE
needNotOutput = false
currentDirectory = /opt/apr-data/example/math078
================================================================
2019-06-12 18:02:19 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-12 18:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 2
Fitness: max 0.0(2), min 0.0(2), ave 0.0
----------------------------------------------------------------

2019-06-12 18:02:20 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-12 18:02:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, syntax-valid 6, build-succeeded 0
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-06-12 18:02:22 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-06-12 18:02:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 0
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-06-12 18:02:23 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-06-12 18:02:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 10, syntax-valid 10, build-succeeded 4
Fitness: max 0.0(4), min 0.0(4), ave 0.0
----------------------------------------------------------------

2019-06-12 18:02:26 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-06-12 18:02:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 10, syntax-valid 7, build-succeeded 2
Fitness: max 0.0(2), min 0.0(2), ave 0.0
----------------------------------------------------------------

2019-06-12 18:02:28 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-06-12 18:02:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 4
Fitness: max 1.0(1), min 0.0(3), ave 0.25
----------------------------------------------------------------

2019-06-12 18:02:30 [main] [INFO]  KGenProgMain - found enough solutions.
2019-06-12 18:02:30 [main] [INFO]  Patch - 
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
2019-06-12 18:02:30 [main] [INFO]  Patch - 
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2019-06-12 18:02:31 [main] [INFO]  KGenProgMain - execution time: 11 seconds
2019-06-12 18:02:31 [main] [INFO]  KGenProgMain - Total Variants: generated 60, syntax-valid 48, build-succeeded 12


real 17.372
user 60.226
sys  1.421
