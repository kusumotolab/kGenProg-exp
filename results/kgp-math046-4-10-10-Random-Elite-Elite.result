Tue Apr 23 01:46:52 UTC 2019
/opt/apr-data/example/math046
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.complex.ComplexTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 10 --crossover-type=Random --crossover-first-variant=Elite --crossover-second-variant=Elite --random-seed 4 -o /opt/apr-data/tmp
2019-04-23 01:46:53 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.complex.ComplexTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 4
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Elite
secondVariantSelectionStrategy = Elite
currentDirectory = /opt/apr-data/example/math046
================================================================
2019-04-23 01:47:04 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-23 01:47:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 10, syntax-valid 7, build-succeeded 1
Fitness: max 0.9655172413793104(1), min 0.9655172413793104(1), ave 0.9655172413793104
----------------------------------------------------------------

2019-04-23 01:47:13 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-23 01:47:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 3
Fitness: max 0.9655172413793104(1), min 0.9568965517241379(2), ave 0.9597701149425287
----------------------------------------------------------------

2019-04-23 01:47:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-23 01:47:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 seconds
Variants: generated 20, syntax-valid 7, build-succeeded 3
Fitness: max 0.9655172413793104(2), min 0.9568965517241379(1), ave 0.9626436781609197
----------------------------------------------------------------

2019-04-23 01:47:59 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-23 01:48:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 13 seconds
Variants: generated 20, syntax-valid 8, build-succeeded 2
Fitness: max 0.9655172413793104(2), min 0.9655172413793104(2), ave 0.9655172413793104
----------------------------------------------------------------

2019-04-23 01:48:17 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-23 01:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 19 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 10
Fitness: max 0.9741379310344828(1), min 0.8448275862068966(1), ave 0.953448275862069
----------------------------------------------------------------

2019-04-23 01:49:24 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-23 01:50:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 55 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 5
Fitness: max 0.9741379310344828(4), min 0.9482758620689655(1), ave 0.9689655172413794
----------------------------------------------------------------

2019-04-23 01:50:00 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-04-23 01:50:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 37 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 6
Fitness: max 0.9827586206896551(1), min 0.9482758620689655(1), ave 0.9712643678160919
----------------------------------------------------------------

2019-04-23 01:50:42 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-04-23 01:51:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 5 seconds
Variants: generated 20, syntax-valid 10, build-succeeded 4
Fitness: max 0.9827586206896551(1), min 0.9741379310344828(3), ave 0.9762931034482758
----------------------------------------------------------------

2019-04-23 01:51:10 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-04-23 01:51:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 33 seconds
Variants: generated 20, syntax-valid 5, build-succeeded 4
Fitness: max 0.9827586206896551(3), min 0.9741379310344828(1), ave 0.9806034482758621
----------------------------------------------------------------

2019-04-23 01:51:38 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-04-23 01:52:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 45 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 11
Fitness: max 0.9913793103448276(1), min 0.9741379310344828(4), ave 0.9804075235109718
----------------------------------------------------------------

2019-04-23 01:52:49 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-04-23 01:53:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 31 seconds
Variants: generated 20, syntax-valid 12, build-succeeded 7
Fitness: max 0.9913793103448276(3), min 0.9741379310344828(3), ave 0.9827586206896551
----------------------------------------------------------------

2019-04-23 01:53:35 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-04-23 01:54:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 42 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 11
Fitness: max 0.9913793103448276(4), min 0.9741379310344828(2), ave 0.9843260188087775
----------------------------------------------------------------

2019-04-23 01:54:47 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-04-23 01:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 16 seconds
Variants: generated 20, syntax-valid 9, build-succeeded 5
Fitness: max 1.0(1), min 0.9827586206896551(1), ave 0.9913793103448276
----------------------------------------------------------------

2019-04-23 01:55:20 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-23 01:55:20 [main] [INFO]  KGenProgMain - GA stopped at the era of 13th generation.
2019-04-23 01:55:20 [main] [INFO]  Patch - 
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,14 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
-            return NaN;
-        }
+        if (isNaN || divisor.isNaN)
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor.isZero)
+			if (divisor.isInfinite() && !isInfinite()) {
+				return ZERO;
+			}
 
         if (divisor.isInfinite() && !isInfinite()) {
             return ZERO;
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -747,9 +744,8 @@
      * @since 1.2
      */
     public Complex log() {
-        if (isNaN) {
-            return NaN;
-        }
+        if (isNaN)
+			return NaN;
 
         return createComplex(FastMath.log(abs()),
                              FastMath.atan2(imaginary, real));
2019-04-23 01:55:20 [main] [INFO]  KGenProgMain - execution time: 8 minutes 16 seconds

real 508.036
user 710.440
sys  5.115
