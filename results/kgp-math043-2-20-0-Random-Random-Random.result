Mon Apr 22 22:55:32 UTC 2019
/opt/apr-data/example/math043
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.stat.descriptive.SummaryStatisticsTest -x org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 20 --crossover-generating-count 0 --crossover-type=Random --crossover-first-variant=Random --crossover-second-variant=Random --random-seed 2 -o /opt/apr-data/tmp
2019-04-22 22:55:32 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 20
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 2
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math043
================================================================
2019-04-22 22:55:40 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-22 22:55:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 3
Fitness: max 0.7692307692307693(3), min 0.7692307692307693(3), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 22:55:47 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-22 22:55:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 4
Fitness: max 0.7692307692307693(2), min 0.5384615384615384(1), ave 0.6923076923076923
----------------------------------------------------------------

2019-04-22 22:55:56 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-22 22:56:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 3
Fitness: max 0.7692307692307693(3), min 0.7692307692307693(3), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 22:56:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-22 22:56:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 4
Fitness: max 0.7692307692307693(3), min 0.6923076923076923(1), ave 0.75
----------------------------------------------------------------

2019-04-22 22:56:11 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-22 22:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 20, syntax-valid 18, build-succeeded 4
Fitness: max 0.7692307692307693(2), min 0.5384615384615384(2), ave 0.6538461538461539
----------------------------------------------------------------

2019-04-22 22:56:20 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-22 22:56:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 4
Fitness: max 0.7692307692307693(3), min 0.6923076923076923(1), ave 0.75
----------------------------------------------------------------

2019-04-22 22:56:29 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-04-22 22:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 seconds
Variants: generated 20, syntax-valid 18, build-succeeded 4
Fitness: max 0.9230769230769231(1), min 0.7692307692307693(3), ave 0.8076923076923077
----------------------------------------------------------------

2019-04-22 22:56:38 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-04-22 22:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 1 seconds
Variants: generated 20, syntax-valid 18, build-succeeded 1
Fitness: max 0.7692307692307693(1), min 0.7692307692307693(1), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 22:56:41 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-04-22 22:56:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 11 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 5
Fitness: max 0.9230769230769231(1), min 0.7692307692307693(4), ave 0.8
----------------------------------------------------------------

2019-04-22 22:56:52 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-04-22 22:57:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 24 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 6
Fitness: max 1.0(1), min 0.7692307692307693(2), ave 0.8846153846153847
----------------------------------------------------------------

2019-04-22 22:57:04 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-22 22:57:04 [main] [INFO]  KGenProgMain - GA stopped at the era of 10th generation.
2019-04-22 22:57:04 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.summary.SumOfLogs
+++ org.apache.commons.math.stat.descriptive.summary.SumOfLogs
@@ -130,7 +130,6 @@
     public double evaluate(final double[] values, final int begin, final int length) {
         double sumLog = Double.NaN;
         if (test(values, begin, length, true)) {
-            sumLog = 0.0;
             for (int i = begin; i < begin + length; i++) {
                 sumLog += FastMath.log(values[i]);
             }
2019-04-22 22:57:04 [main] [INFO]  Patch - 
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1172,8 +1172,6 @@
                     /* Multiply a = y * x */
                     aa = ya * xa;
                     ab = ya * xb + yb * xa + yb * xb;
-                    /* split, so now y = a */
-                    tmp = aa * HEX_40000000;
                     ya = aa + tmp - tmp;
                     yb = aa - ya + ab;
 
@@ -1311,7 +1309,6 @@
         a = c;
         b = b + d;
 
-        c = a + lnzb;
         d = -(c - a - lnzb);
         a = c;
         b = b + d;
2019-04-22 22:57:04 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.summary.Sum
+++ org.apache.commons.math.stat.descriptive.summary.Sum
@@ -119,7 +119,7 @@
     public double evaluate(final double[] values, final int begin, final int length) {
         double sum = Double.NaN;
         if (test(values, begin, length, true)) {
-            sum = 0.0;
+            n = 0;
             for (int i = begin; i < begin + length; i++) {
                 sum += values[i];
             }
2019-04-22 22:57:04 [main] [INFO]  KGenProgMain - execution time: 1 minutes 24 seconds

real 92.576
user 183.059
sys  3.375
