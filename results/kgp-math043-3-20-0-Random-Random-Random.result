Tue Apr 23 00:46:00 UTC 2019
/opt/apr-data/example/math043
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.stat.descriptive.SummaryStatisticsTest -x org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 20 --crossover-generating-count 0 --crossover-type=Random --crossover-first-variant=Random --crossover-second-variant=Random --random-seed 3 -o /opt/apr-data/tmp
2019-04-23 00:46:00 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 20
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 3
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math043
================================================================
2019-04-23 00:46:08 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-23 00:46:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 20, syntax-valid 18, build-succeeded 5
Fitness: max 0.8461538461538461(1), min 0.6923076923076923(1), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-23 00:46:19 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-23 00:46:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 3
Fitness: max 0.7692307692307693(3), min 0.7692307692307693(3), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-23 00:46:28 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-23 00:46:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 3
Fitness: max 0.9230769230769231(1), min 0.7692307692307693(2), ave 0.8205128205128206
----------------------------------------------------------------

2019-04-23 00:46:34 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-23 00:46:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 5
Fitness: max 0.8461538461538461(1), min 0.38461538461538464(1), ave 0.6923076923076923
----------------------------------------------------------------

2019-04-23 00:46:45 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-23 00:46:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 5
Fitness: max 0.9230769230769231(1), min 0.6923076923076923(1), ave 0.8
----------------------------------------------------------------

2019-04-23 00:46:55 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-23 00:47:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 0 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 7
Fitness: max 0.9230769230769231(1), min 0.6153846153846154(3), ave 0.7582417582417582
----------------------------------------------------------------

2019-04-23 00:47:09 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-04-23 00:47:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 13 seconds
Variants: generated 20, syntax-valid 18, build-succeeded 6
Fitness: max 0.9230769230769231(2), min 0.6923076923076923(1), ave 0.8461538461538461
----------------------------------------------------------------

2019-04-23 00:47:22 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-04-23 00:47:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 20 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 3
Fitness: max 0.9230769230769231(3), min 0.9230769230769231(3), ave 0.923076923076923
----------------------------------------------------------------

2019-04-23 00:47:29 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-04-23 00:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 32 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 6
Fitness: max 0.9230769230769231(3), min 0.8461538461538461(3), ave 0.8846153846153846
----------------------------------------------------------------

2019-04-23 00:47:41 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-04-23 00:47:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 48 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 8
Fitness: max 1.0(2), min 0.7692307692307693(1), ave 0.9134615384615385
----------------------------------------------------------------

2019-04-23 00:47:57 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-23 00:47:57 [main] [INFO]  KGenProgMain - GA stopped at the era of 10th generation.
2019-04-23 00:47:57 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.moment.Variance
+++ org.apache.commons.math.stat.descriptive.moment.Variance
@@ -255,16 +255,8 @@
 
         double var = Double.NaN;
 
-        if (test(values, begin, length)) {
-            clear();
-            if (length == 1) {
-                var = 0.0;
-            } else if (length > 1) {
-                Mean mean = new Mean();
-                double m = mean.evaluate(values, begin, length);
-                var = evaluate(values, m, begin, length);
-            }
-        }
+        if (test(values, begin, length))
+			incMoment = false;
         return var;
     }
 
2019-04-23 00:47:57 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.summary.SumOfLogs
+++ org.apache.commons.math.stat.descriptive.summary.SumOfLogs
@@ -130,7 +130,6 @@
     public double evaluate(final double[] values, final int begin, final int length) {
         double sumLog = Double.NaN;
         if (test(values, begin, length, true)) {
-            sumLog = 0.0;
             for (int i = begin; i < begin + length; i++) {
                 sumLog += FastMath.log(values[i]);
             }
2019-04-23 00:47:57 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.moment.Mean
+++ org.apache.commons.math.stat.descriptive.moment.Mean
@@ -154,20 +154,8 @@
      */
     @Override
     public double evaluate(final double[] values,final int begin, final int length) {
-        if (test(values, begin, length)) {
-            Sum sum = new Sum();
-            double sampleSize = length;
-
-            // Compute initial estimate using definitional formula
-            double xbar = sum.evaluate(values, begin, length) / sampleSize;
-
-            // Compute correction factor in second pass
-            double correction = 0;
-            for (int i = begin; i < begin + length; i++) {
-                correction += values[i] - xbar;
-            }
-            return xbar + (correction/sampleSize);
-        }
+        if (test(values, begin, length))
+			incMoment = false;
         return Double.NaN;
     }
 
2019-04-23 00:47:57 [main] [INFO]  KGenProgMain - execution time: 1 minutes 48 seconds

real 116.720
user 225.460
sys  3.463
