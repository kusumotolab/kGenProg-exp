Tue Apr  9 06:53:54 UTC 2019
/opt/apr-data/example/math046
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.complex.ComplexTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 10 --crossover-type=Random --crossover-first-variant=Random --crossover-second-variant=Random --random-seed 1 -o /opt/apr-data/tmp
2019-04-09 06:53:54 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.complex.ComplexTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 1
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math046
================================================================
2019-04-09 06:54:11 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-09 06:54:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 10, syntax-valid 10, build-succeeded 2
Fitness: max 0.9827586206896551(1), min 0.9655172413793104(1), ave 0.9741379310344828
----------------------------------------------------------------

2019-04-09 06:54:31 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-09 06:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 0
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-04-09 06:54:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-09 06:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 1
Fitness: max 0.9741379310344828(1), min 0.9741379310344828(1), ave 0.9741379310344828
----------------------------------------------------------------

2019-04-09 06:54:45 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-09 06:54:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 10, syntax-valid 5, build-succeeded 1
Fitness: max 0.9568965517241379(1), min 0.9568965517241379(1), ave 0.9568965517241379
----------------------------------------------------------------

2019-04-09 06:54:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-09 06:55:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 30 seconds
Variants: generated 10, syntax-valid 10, build-succeeded 5
Fitness: max 0.9827586206896551(2), min 0.9568965517241379(1), ave 0.9706896551724139
----------------------------------------------------------------

2019-04-09 06:55:41 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-09 06:56:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 17 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 5
Fitness: max 0.9827586206896551(3), min 0.9482758620689655(1), ave 0.9706896551724137
----------------------------------------------------------------

2019-04-09 06:56:28 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-04-09 06:57:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 4 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 5
Fitness: max 0.9913793103448276(1), min 0.9568965517241379(1), ave 0.9741379310344828
----------------------------------------------------------------

2019-04-09 06:57:16 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-04-09 06:57:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 26 seconds
Variants: generated 20, syntax-valid 10, build-succeeded 2
Fitness: max 0.9655172413793104(2), min 0.9655172413793104(2), ave 0.9655172413793104
----------------------------------------------------------------

2019-04-09 06:57:38 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-04-09 06:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 43 seconds
Variants: generated 20, syntax-valid 8, build-succeeded 2
Fitness: max 0.9913793103448276(1), min 0.9137931034482759(1), ave 0.9525862068965518
----------------------------------------------------------------

2019-04-09 06:57:54 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-04-09 06:58:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 28 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 5
Fitness: max 0.9913793103448276(3), min 0.9655172413793104(1), ave 0.9844827586206897
----------------------------------------------------------------

2019-04-09 06:58:40 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-04-09 06:59:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 10 seconds
Variants: generated 20, syntax-valid 12, build-succeeded 4
Fitness: max 0.9913793103448276(1), min 0.9827586206896551(3), ave 0.9849137931034483
----------------------------------------------------------------

2019-04-09 06:59:21 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-04-09 07:00:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 8 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 7
Fitness: max 1.0(1), min 0.9655172413793104(2), ave 0.981527093596059
----------------------------------------------------------------

2019-04-09 07:00:20 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-09 07:00:20 [main] [INFO]  KGenProgMain - GA stopped at the era of 12th generation.
2019-04-09 07:00:20 [main] [INFO]  Patch - 
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
-            return NaN;
-        }
+        if (isNaN || divisor.isNaN)
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            if (isNaN) {
+				return NaN;
+			}
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2019-04-09 07:00:20 [main] [INFO]  Patch - 
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1281,9 +1281,8 @@
 
         /* Handle special cases of Positive infinity. */
         if (x == Double.POSITIVE_INFINITY) {
-            if (hiPrec != null) {
-                hiPrec[0] = Double.POSITIVE_INFINITY;
-            }
+            if (hiPrec != null)
+			return Float.NaN;
 
             return Double.POSITIVE_INFINITY;
         }
2019-04-09 07:00:20 [main] [INFO]  KGenProgMain - execution time: 6 minutes 9 seconds

real 386.694
user 495.597
sys  3.244
