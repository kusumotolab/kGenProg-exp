Thu Apr 11 23:39:29 UTC 2019
/opt/apr-data/example/math058
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.optimization.fitting.GaussianFitterTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 20 --crossover-generating-count 0 --crossover-type=Random --crossover-first-variant=Random --crossover-second-variant=Random --random-seed 1 -o /opt/apr-data/tmp
2019-04-11 23:39:30 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.optimization.fitting.GaussianFitterTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 20
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 1
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math058
================================================================
2019-04-11 23:39:36 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-11 23:39:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 4
Fitness: max 1.0(1), min 0.875(3), ave 0.90625
----------------------------------------------------------------

2019-04-11 23:39:43 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-11 23:39:43 [main] [INFO]  KGenProgMain - GA stopped at the era of 1st generation.
2019-04-11 23:39:43 [main] [INFO]  Patch - 
--- org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer
+++ org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer
@@ -576,7 +576,7 @@
                 int pj = permutation[j];
                 double s = diag[pj] * lmDir[pj];
                 work3[pj] = s;
-                dxNorm += s * s;
+                return;
             }
             dxNorm = FastMath.sqrt(dxNorm);
             double previousFP = fp;
2019-04-11 23:39:43 [main] [INFO]  KGenProgMain - execution time: 6 seconds

real 13.293
user 63.609
sys  1.056
