Mon Apr 22 23:50:09 UTC 2019
/opt/apr-data/example/math046
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.complex.ComplexTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 10 --crossover-type=Random --crossover-first-variant=Elite --crossover-second-variant=GeneSimilarity --random-seed 2 -o /opt/apr-data/tmp
2019-04-22 23:50:09 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.complex.ComplexTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 2
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Elite
secondVariantSelectionStrategy = GeneSimilarity
currentDirectory = /opt/apr-data/example/math046
================================================================
2019-04-22 23:50:21 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-22 23:50:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 4
Fitness: max 0.9913793103448276(1), min 0.9568965517241379(1), ave 0.9741379310344828
----------------------------------------------------------------

2019-04-22 23:50:49 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-22 23:50:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 0
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-04-22 23:50:55 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-22 23:51:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 3
Fitness: max 0.9913793103448276(1), min 0.9568965517241379(1), ave 0.9770114942528735
----------------------------------------------------------------

2019-04-22 23:51:15 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-22 23:51:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 1 seconds
Variants: generated 20, syntax-valid 10, build-succeeded 1
Fitness: max 0.9741379310344828(1), min 0.9741379310344828(1), ave 0.9741379310344828
----------------------------------------------------------------

2019-04-22 23:51:22 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-22 23:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 21 seconds
Variants: generated 20, syntax-valid 10, build-succeeded 3
Fitness: max 0.9913793103448276(2), min 0.8706896551724138(1), ave 0.9511494252873564
----------------------------------------------------------------

2019-04-22 23:51:43 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-22 23:52:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 55 seconds
Variants: generated 20, syntax-valid 10, build-succeeded 5
Fitness: max 1.0(1), min 0.9827586206896551(2), ave 0.9896551724137931
----------------------------------------------------------------

2019-04-22 23:52:16 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-22 23:52:16 [main] [INFO]  KGenProgMain - GA stopped at the era of 6th generation.
2019-04-22 23:52:17 [main] [INFO]  Patch - 
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2019-04-22 23:52:17 [main] [INFO]  KGenProgMain - execution time: 1 minutes 55 seconds

real 127.805
user 231.067
sys  2.767
