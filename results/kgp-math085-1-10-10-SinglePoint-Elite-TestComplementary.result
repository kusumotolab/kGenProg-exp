Mon Apr 15 17:59:04 UTC 2019
/opt/apr-data/example/math085
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/java -t src/test -x org.apache.commons.math.distribution.NormalDistributionTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 10 --crossover-type=SinglePoint --crossover-first-variant=Elite --crossover-second-variant=TestComplementary --random-seed 1 -o /opt/apr-data/tmp
2019-04-15 17:59:04 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 1
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = SinglePoint
firstVariantSelectionStrategy = Elite
secondVariantSelectionStrategy = TestComplementary
currentDirectory = /opt/apr-data/example/math085
================================================================
2019-04-15 17:59:10 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-15 17:59:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, syntax-valid 7, build-succeeded 2
Fitness: max 1.0(1), min 0.9230769230769231(1), ave 0.9615384615384616
----------------------------------------------------------------

2019-04-15 17:59:12 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-15 17:59:12 [main] [INFO]  KGenProgMain - GA stopped at the era of 1st generation.
2019-04-15 17:59:12 [main] [INFO]  Patch - 
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2019-04-15 17:59:12 [main] [INFO]  KGenProgMain - execution time: 1 seconds

real 8.220
user 54.290
sys  0.793
