Sun Apr 14 15:11:29 UTC 2019
/opt/apr-data/example/math080
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.linear.EigenDecompositionImplTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 10 --crossover-type=SinglePoint --crossover-first-variant=Elite --crossover-second-variant=GeneSimilarity --random-seed 1 -o /opt/apr-data/tmp
2019-04-14 15:11:29 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.linear.EigenDecompositionImplTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 1
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = SinglePoint
firstVariantSelectionStrategy = Elite
secondVariantSelectionStrategy = GeneSimilarity
currentDirectory = /opt/apr-data/example/math080
================================================================
2019-04-14 15:11:35 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-14 15:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 2
Fitness: max 0.9444444444444444(1), min 0.6111111111111112(1), ave 0.7777777777777778
----------------------------------------------------------------

2019-04-14 15:11:38 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-14 15:11:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 6
Fitness: max 0.9444444444444444(4), min 0.6111111111111112(1), ave 0.8703703703703703
----------------------------------------------------------------

2019-04-14 15:11:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-14 15:11:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 10, syntax-valid 10, build-succeeded 1
Fitness: max 0.9444444444444444(1), min 0.9444444444444444(1), ave 0.9444444444444444
----------------------------------------------------------------

2019-04-14 15:11:46 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-14 15:11:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 10, syntax-valid 7, build-succeeded 3
Fitness: max 0.9444444444444444(1), min 0.5(1), ave 0.6666666666666666
----------------------------------------------------------------

2019-04-14 15:11:49 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-14 15:11:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 20, syntax-valid 9, build-succeeded 2
Fitness: max 0.9444444444444444(2), min 0.9444444444444444(2), ave 0.9444444444444444
----------------------------------------------------------------

2019-04-14 15:11:52 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-14 15:11:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 0
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-04-14 15:11:52 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-04-14 15:11:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 2
Fitness: max 0.9444444444444444(2), min 0.9444444444444444(2), ave 0.9444444444444444
----------------------------------------------------------------

2019-04-14 15:11:55 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-04-14 15:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 20, syntax-valid 10, build-succeeded 6
Fitness: max 0.9444444444444444(5), min 0.5555555555555556(1), ave 0.8796296296296297
----------------------------------------------------------------

2019-04-14 15:12:00 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-04-14 15:12:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 20, syntax-valid 9, build-succeeded 2
Fitness: max 0.9444444444444444(2), min 0.9444444444444444(2), ave 0.9444444444444444
----------------------------------------------------------------

2019-04-14 15:12:03 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-04-14 15:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 6
Fitness: max 0.9444444444444444(5), min 0.5(1), ave 0.8703703703703703
----------------------------------------------------------------

2019-04-14 15:12:09 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-04-14 15:12:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 20, syntax-valid 8, build-succeeded 3
Fitness: max 0.9444444444444444(2), min 0.7777777777777778(1), ave 0.8888888888888888
----------------------------------------------------------------

2019-04-14 15:12:13 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-04-14 15:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 20, syntax-valid 9, build-succeeded 4
Fitness: max 0.9444444444444444(2), min 0.5(2), ave 0.7222222222222222
----------------------------------------------------------------

2019-04-14 15:12:18 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-04-14 15:12:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 20, syntax-valid 9, build-succeeded 1
Fitness: max 1.0(1), min 1.0(1), ave 1.0
----------------------------------------------------------------

2019-04-14 15:12:20 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-14 15:12:20 [main] [INFO]  KGenProgMain - GA stopped at the era of 13th generation.
2019-04-14 15:12:20 [main] [INFO]  Patch - 
--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -942,7 +942,6 @@
             for (int i = 4 * (n - 2) + pingPong; i >= 0; i -= 4) {
                 if (work[i + 2] <= TOLERANCE_2 * d) {
                     work[i + 2] = -0.0;
-                    d = work[i];
                 } else {
                     d *= work[i] / (d + work[i + 2]);
                 }
@@ -1059,7 +1058,6 @@
                 work[l - 2 * pingPong] =
                     Math.min(work[l - 2 * pingPong],
                              Math.min(work[6 + pingPong], work[6 + pingPong]));
-                qMax  = Math.max(qMax, Math.max(work[3 + pingPong], work[7 + pingPong]));
                 dMin  = -0.0;
             }
         }
@@ -1136,10 +1134,8 @@
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
-                j -= 4;
             }
             return true;
         }
@@ -1383,7 +1379,6 @@
         if (work[j4 - 2] == 0.0) {
             work[j4] = 0.0;
             dN1  = work[j4p2 + 2];
-            dMin = dN1;
             eMin = 0.0;
         } else if ((MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) &&
                    (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])) {
@@ -1518,9 +1513,7 @@
                     a2 = cnst3 * a2;
 
                     // rayleigh quotient residual bound.
-                    if (a2 < cnst1) {
-                        s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
-                    }
+                    if (a2 < cnst1)
                     tau = s;
 
                 }
2019-04-14 15:12:20 [main] [INFO]  KGenProgMain - execution time: 44 seconds

real 51.550
user 122.962
sys  1.951
