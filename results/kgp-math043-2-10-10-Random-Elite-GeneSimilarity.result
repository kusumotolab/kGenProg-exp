Mon Apr 22 23:01:54 UTC 2019
/opt/apr-data/example/math043
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.stat.descriptive.SummaryStatisticsTest -x org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 10 --crossover-type=Random --crossover-first-variant=Elite --crossover-second-variant=GeneSimilarity --random-seed 2 -o /opt/apr-data/tmp
2019-04-22 23:01:54 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 10
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 2
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Elite
secondVariantSelectionStrategy = GeneSimilarity
currentDirectory = /opt/apr-data/example/math043
================================================================
2019-04-22 23:02:02 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-04-22 23:02:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 1
Fitness: max 0.7692307692307693(1), min 0.7692307692307693(1), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:02:05 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-04-22 23:02:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 10, syntax-valid 6, build-succeeded 1
Fitness: max 0.7692307692307693(1), min 0.7692307692307693(1), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:02:07 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-04-22 23:02:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 3
Fitness: max 0.7692307692307693(1), min 0.5384615384615384(1), ave 0.6666666666666666
----------------------------------------------------------------

2019-04-22 23:02:13 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-04-22 23:02:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 6
Fitness: max 0.7692307692307693(4), min 0.6923076923076923(2), ave 0.7435897435897436
----------------------------------------------------------------

2019-04-22 23:02:26 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-04-22 23:02:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 20, syntax-valid 14, build-succeeded 7
Fitness: max 0.7692307692307693(6), min 0.5384615384615384(1), ave 0.7362637362637363
----------------------------------------------------------------

2019-04-22 23:02:39 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-04-22 23:02:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 seconds
Variants: generated 20, syntax-valid 11, build-succeeded 8
Fitness: max 0.7692307692307693(8), min 0.7692307692307693(8), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:02:54 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-04-22 23:03:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 10 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 9
Fitness: max 0.7692307692307693(8), min 0.6923076923076923(1), ave 0.7606837606837608
----------------------------------------------------------------

2019-04-22 23:03:13 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-04-22 23:03:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 24 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 7
Fitness: max 0.7692307692307693(7), min 0.7692307692307693(7), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:03:26 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-04-22 23:03:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 39 seconds
Variants: generated 20, syntax-valid 12, build-succeeded 8
Fitness: max 0.7692307692307693(7), min 0.07692307692307693(1), ave 0.6826923076923077
----------------------------------------------------------------

2019-04-22 23:03:41 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-04-22 23:03:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 53 seconds
Variants: generated 20, syntax-valid 14, build-succeeded 7
Fitness: max 0.7692307692307693(7), min 0.7692307692307693(7), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:03:55 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-04-22 23:04:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 8 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 8
Fitness: max 0.7692307692307693(8), min 0.7692307692307693(8), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:04:10 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-04-22 23:04:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 23 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 8
Fitness: max 0.8461538461538461(1), min 0.6923076923076923(1), ave 0.7692307692307693
----------------------------------------------------------------

2019-04-22 23:04:26 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-04-22 23:04:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 42 seconds
Variants: generated 20, syntax-valid 16, build-succeeded 10
Fitness: max 0.8461538461538461(5), min 0.7692307692307693(5), ave 0.8076923076923077
----------------------------------------------------------------

2019-04-22 23:04:44 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-04-22 23:05:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 7 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 13
Fitness: max 0.8461538461538461(10), min 0.7692307692307693(3), ave 0.8284023668639053
----------------------------------------------------------------

2019-04-22 23:05:09 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-04-22 23:05:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 23 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 8
Fitness: max 0.8461538461538461(6), min 0.6923076923076923(1), ave 0.8173076923076923
----------------------------------------------------------------

2019-04-22 23:05:25 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-04-22 23:05:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 40 seconds
Variants: generated 20, syntax-valid 13, build-succeeded 9
Fitness: max 0.8461538461538461(8), min 0.7692307692307693(1), ave 0.8376068376068376
----------------------------------------------------------------

2019-04-22 23:05:43 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-04-22 23:06:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 57 seconds
Variants: generated 20, syntax-valid 15, build-succeeded 9
Fitness: max 0.8461538461538461(7), min 0.7692307692307693(2), ave 0.8290598290598291
----------------------------------------------------------------

2019-04-22 23:06:00 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2019-04-22 23:06:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 20 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 13
Fitness: max 0.8461538461538461(11), min 0.7692307692307693(2), ave 0.834319526627219
----------------------------------------------------------------

2019-04-22 23:06:23 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2019-04-22 23:06:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 43 seconds
Variants: generated 20, syntax-valid 17, build-succeeded 12
Fitness: max 1.0(1), min 0.7692307692307693(4), ave 0.8333333333333334
----------------------------------------------------------------

2019-04-22 23:06:45 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-04-22 23:06:45 [main] [INFO]  KGenProgMain - GA stopped at the era of 19th generation.
2019-04-22 23:06:45 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.summary.SumOfLogs
+++ org.apache.commons.math.stat.descriptive.summary.SumOfLogs
@@ -130,7 +130,6 @@
     public double evaluate(final double[] values, final int begin, final int length) {
         double sumLog = Double.NaN;
         if (test(values, begin, length, true)) {
-            sumLog = 0.0;
             for (int i = begin; i < begin + length; i++) {
                 sumLog += FastMath.log(values[i]);
             }
2019-04-22 23:06:45 [main] [INFO]  Patch - 
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1131,26 +1131,9 @@
         /* Extract the exponent */
         int exp = (int)(bits >> 52)-1023;
 
-        if ((bits & 0x7ff0000000000000L) == 0) {
-            // Subnormal!
-            if (x == 0) {
-                // Zero
-                if (hiPrec != null) {
-                    hiPrec[0] = Double.NEGATIVE_INFINITY;
-                }
+        if ((bits & 0x7ff0000000000000L) == 0)
 
-                return Double.NEGATIVE_INFINITY;
-            }
 
-            /* Normalize the subnormal number. */
-            bits <<= 1;
-            while ( (bits & 0x0010000000000000L) == 0) {
-                exp--;
-                bits <<= 1;
-            }
-        }
-
-
         if (exp == -1 || exp == 0) {
             if (x < 1.01 && x > 0.99 && hiPrec == null) {
                 /* The normal method doesn't work well in the range [0.99, 1.01], so call do a straight
@@ -1294,8 +1277,6 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
2019-04-22 23:06:45 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.summary.Sum
+++ org.apache.commons.math.stat.descriptive.summary.Sum
@@ -119,7 +119,7 @@
     public double evaluate(final double[] values, final int begin, final int length) {
         double sum = Double.NaN;
         if (test(values, begin, length, true)) {
-            sum = 0.0;
+            n = 0;
             for (int i = begin; i < begin + length; i++) {
                 sum += values[i];
             }
2019-04-22 23:06:45 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -168,9 +168,7 @@
             throw new NotPositiveException(LocalizedFormats.START_POSITION, begin);
         }
 
-        if (length < 0) {
-            throw new NotPositiveException(LocalizedFormats.LENGTH, length);
-        }
+        if (length < 0)
 
         if (begin + length > values.length) {
             throw new NumberIsTooLargeException(LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END,
2019-04-22 23:06:45 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.moment.Mean
+++ org.apache.commons.math.stat.descriptive.moment.Mean
@@ -164,7 +164,6 @@
             // Compute correction factor in second pass
             double correction = 0;
             for (int i = begin; i < begin + length; i++) {
-                correction += values[i] - xbar;
             }
             return xbar + (correction/sampleSize);
         }
2019-04-22 23:06:45 [main] [INFO]  Patch - 
--- org.apache.commons.math.stat.descriptive.summary.SumOfSquares
+++ org.apache.commons.math.stat.descriptive.summary.SumOfSquares
@@ -73,6 +73,8 @@
     @Override
     public void increment(final double d) {
         value += d * d;
+		n = 0;
+		n = 0;
         n++;
     }
 
2019-04-22 23:06:45 [main] [INFO]  KGenProgMain - execution time: 4 minutes 43 seconds

real 291.256
user 445.746
sys  4.836
