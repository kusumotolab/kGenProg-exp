Sat Jun 29 13:47:44 UTC 2019
/opt/apr-data/t-kuma-example/math080
java -jar /opt/apr-data/bin/kgp.jar --config kgenprog.toml
2019-06-29 13:47:46 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = 
executionTests = [org.apache.commons.math.linear.EigenDecompositionImplTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 20000
timeLimit = PT1H
testTimeLimit = PT10S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 4
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/t-kuma-example/math080
================================================================
2019-06-29 13:47:57 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-29 13:48:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 10, build-succeeded 3, build-failed 6, syntax-invalid 1, redundant 0
Fitness: max 0.9444444444444444(3), min 0.9444444444444444(3), ave 0.9444444444444443
----------------------------------------------------------------

2019-06-29 13:48:01 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-29 13:48:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 10, build-succeeded 3, build-failed 6, syntax-invalid 0, redundant 1
Fitness: max 1.0(1), min 0.9444444444444444(2), ave 0.9629629629629629
----------------------------------------------------------------

2019-06-29 13:48:03 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-06-29 13:48:03 [main] [INFO]  KGenProgMain - GA stopped at the era of 2nd generation.
2019-06-29 13:48:03 [main] [INFO]  Patch - 
--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -955,7 +955,6 @@
                 work[j] = d + work[i];
                 if (work[i] <= TOLERANCE_2 * d) {
                     work[i]     = -0.0;
-                    work[j]     = d;
                     work[j + 2] = 0.0;
                     d = work[i + 2];
                 } else if ((MathUtils.SAFE_MIN * work[i + 2] < work[j]) &&
@@ -1133,14 +1132,8 @@
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
             int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
-                }
-                j -= 4;
-            }
+            for (int i = 0; i < j; i += 4)
+				return true;
             return true;
         }
         return false;
2019-06-29 13:48:04 [main] [INFO]  KGenProgMain - execution time: 7 seconds

real 19.974
user 61.576
sys  1.060
