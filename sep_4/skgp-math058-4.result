Sat Jun 29 18:00:47 UTC 2019
/opt/apr-data/t-kuma-example/math058
java -jar /opt/apr-data/bin/kgp.jar --config kgenprog.toml
2019-06-29 18:00:47 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = 
executionTests = [org.apache.commons.math.optimization.fitting.GaussianFitterTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 20000
timeLimit = PT1H
testTimeLimit = PT10S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 4
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/t-kuma-example/math058
================================================================
2019-06-29 18:00:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-29 18:00:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 4, build-failed 5, syntax-invalid 0, redundant 1
Fitness: max 0.88(4), min 0.88(4), ave 0.88
----------------------------------------------------------------

2019-06-29 18:00:53 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-29 18:00:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, build-succeeded 3, build-failed 6, syntax-invalid 0, redundant 1
Fitness: max 1.0(1), min 0.08(1), ave 0.6533333333333333
----------------------------------------------------------------

2019-06-29 18:00:54 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-06-29 18:00:54 [main] [INFO]  KGenProgMain - GA stopped at the era of 2nd generation.
2019-06-29 18:00:55 [main] [INFO]  Patch - 
--- org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer
+++ org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer
@@ -545,6 +545,7 @@
             sum2 += sum * sum;
         }
         double gNorm = FastMath.sqrt(sum2);
+		lmDir = new double[cols];
         double paru = gNorm / delta;
         if (paru == 0) {
             // 2.2251e-308 is the smallest positive real for IEE754
@@ -616,9 +617,6 @@
                 paru = FastMath.min(paru, lmPar);
             }
 
-            // compute an improved estimate for lmPar
-            lmPar = FastMath.max(parl, lmPar + correction);
-
         }
     }
 
2019-06-29 18:00:55 [main] [INFO]  KGenProgMain - execution time: 2 seconds

real 8.647
user 53.697
sys  0.975
