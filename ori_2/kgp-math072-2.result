Mon Jun 24 07:58:45 UTC 2019
/opt/apr-data/example/math072
java -jar /opt/apr-data/bin/kgp.jar --config kgenprog.toml
2019-06-24 07:58:45 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = 
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 20000
timeLimit = PT1H
testTimeLimit = PT10S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 2
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math072
================================================================
2019-06-24 07:58:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-24 07:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 3, build-failed 7, syntax-invalid 0, redundant 0
Fitness: max 0.8333333333333334(2), min 0.6666666666666666(1), ave 0.7777777777777778
----------------------------------------------------------------

2019-06-24 07:58:53 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-24 07:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 0, build-failed 9, syntax-invalid 1, redundant 0
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-06-24 07:58:54 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-06-24 07:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 10, build-succeeded 5, build-failed 4, syntax-invalid 0, redundant 1
Fitness: max 0.8333333333333334(1), min 0.16666666666666666(1), ave 0.6
----------------------------------------------------------------

2019-06-24 07:58:54 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-06-24 07:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, build-succeeded 3, build-failed 5, syntax-invalid 0, redundant 2
Fitness: max 0.8333333333333334(3), min 0.8333333333333334(3), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-24 07:58:54 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-06-24 07:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, build-succeeded 1, build-failed 7, syntax-invalid 0, redundant 2
Fitness: max 0.8333333333333334(1), min 0.8333333333333334(1), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-24 07:58:55 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-06-24 07:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 10, build-succeeded 2, build-failed 7, syntax-invalid 0, redundant 1
Fitness: max 0.8333333333333334(1), min 0.6666666666666666(1), ave 0.75
----------------------------------------------------------------

2019-06-24 07:58:55 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-06-24 07:58:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 10, build-succeeded 0, build-failed 7, syntax-invalid 0, redundant 3
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-06-24 07:58:56 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-06-24 07:58:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 10, build-succeeded 2, build-failed 5, syntax-invalid 0, redundant 3
Fitness: max 1.0(1), min 0.16666666666666666(1), ave 0.5833333333333334
----------------------------------------------------------------

2019-06-24 07:58:57 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-06-24 07:58:57 [main] [INFO]  KGenProgMain - GA stopped at the era of 8th generation.
2019-06-24 07:58:57 [main] [INFO]  Patch - 
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2019-06-24 07:58:58 [main] [INFO]  KGenProgMain - execution time: 6 seconds

real 13.944
user 57.952
sys  1.208
