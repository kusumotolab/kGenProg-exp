Sat Jun 29 02:54:26 UTC 2019
/opt/apr-data/example/math072
java -jar /opt/apr-data/bin/kgp.jar --config kgenprog.toml
2019-06-29 02:54:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = 
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest]
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 20000
timeLimit = PT1H
testTimeLimit = PT10S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 4
scope = PACKAGE
needNotOutput = false
faultLocalization = Ochiai
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
currentDirectory = /opt/apr-data/example/math072
================================================================
2019-06-29 02:54:37 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-29 02:54:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, build-succeeded 2, build-failed 7, syntax-invalid 1, redundant 0
Fitness: max 0.8333333333333334(2), min 0.8333333333333334(2), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:39 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-29 02:54:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 10, build-succeeded 3, build-failed 7, syntax-invalid 0, redundant 0
Fitness: max 0.8333333333333334(2), min 0.5(1), ave 0.7222222222222223
----------------------------------------------------------------

2019-06-29 02:54:40 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-06-29 02:54:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 10, build-succeeded 3, build-failed 5, syntax-invalid 0, redundant 2
Fitness: max 0.8333333333333334(3), min 0.8333333333333334(3), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:41 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-06-29 02:54:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 10, build-succeeded 3, build-failed 7, syntax-invalid 0, redundant 0
Fitness: max 0.8333333333333334(2), min 0.16666666666666666(1), ave 0.6111111111111112
----------------------------------------------------------------

2019-06-29 02:54:42 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-06-29 02:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 10, build-succeeded 4, build-failed 3, syntax-invalid 0, redundant 3
Fitness: max 0.8333333333333334(3), min 0.16666666666666666(1), ave 0.6666666666666667
----------------------------------------------------------------

2019-06-29 02:54:43 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-06-29 02:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 10, build-succeeded 2, build-failed 5, syntax-invalid 0, redundant 3
Fitness: max 0.8333333333333334(2), min 0.8333333333333334(2), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:43 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-06-29 02:54:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 10, build-succeeded 6, build-failed 3, syntax-invalid 0, redundant 1
Fitness: max 0.8333333333333334(3), min 0.16666666666666666(3), ave 0.5
----------------------------------------------------------------

2019-06-29 02:54:44 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-06-29 02:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 10, build-succeeded 1, build-failed 7, syntax-invalid 0, redundant 2
Fitness: max 0.8333333333333334(1), min 0.8333333333333334(1), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:45 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-06-29 02:54:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 10, build-succeeded 1, build-failed 8, syntax-invalid 0, redundant 1
Fitness: max 0.8333333333333334(1), min 0.8333333333333334(1), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:46 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-06-29 02:54:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 10, build-succeeded 0, build-failed 9, syntax-invalid 0, redundant 1
Fitness: max --, min --, ave NaN
----------------------------------------------------------------

2019-06-29 02:54:46 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-06-29 02:54:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 10, build-succeeded 1, build-failed 6, syntax-invalid 0, redundant 3
Fitness: max 0.8333333333333334(1), min 0.8333333333333334(1), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:47 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-06-29 02:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 10, build-succeeded 2, build-failed 7, syntax-invalid 0, redundant 1
Fitness: max 0.8333333333333334(2), min 0.8333333333333334(2), ave 0.8333333333333334
----------------------------------------------------------------

2019-06-29 02:54:48 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-06-29 02:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 10, build-succeeded 3, build-failed 4, syntax-invalid 0, redundant 3
Fitness: max 1.0(1), min 0.16666666666666666(2), ave 0.4444444444444444
----------------------------------------------------------------

2019-06-29 02:54:48 [main] [INFO]  KGenProgMain - enough solutions have been found.
2019-06-29 02:54:48 [main] [INFO]  KGenProgMain - GA stopped at the era of 13th generation.
2019-06-29 02:54:49 [main] [INFO]  Patch - 
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,11 +238,7 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
+                this.iterationCount = iterationCount;
             }
             double dx = x2 - x1;
             double tolerance =
2019-06-29 02:54:49 [main] [INFO]  Patch - 
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,7 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
+        relativeAccuracy = defaultRelativeAccuracy;
     }
 
     /** {@inheritDoc} */
2019-06-29 02:54:52 [main] [INFO]  KGenProgMain - execution time: 15 seconds

real 26.734
user 68.451
sys  1.591
