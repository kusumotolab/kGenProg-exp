Wed Jun 12 18:40:21 UTC 2019
/opt/apr-data/example/math081
java -jar /opt/apr-data/bin/kgp.jar -r ./ -s src/main/java -t src/test/java -x org.apache.commons.math.linear.EigenDecompositionImplTest --time-limit 1800 --test-time-limit 3 --max-generation 10000 --headcount 5 --mutation-generating-count 10 --crossover-generating-count 0 --random-seed 0 -o /opt/apr-data/tmp
JUNIT4_CUSTOM
2019-06-12 18:40:21 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = [org.apache.commons.math.linear.EigenDecompositionImplTest]
workingDir = /tmp/kgenprog-work6903432312245626223
outDir = /opt/apr-data/tmp
mutationGeneratingCount = 10
crossoverGeneratingCount = 0
headcount = 5
maxGeneration = 10000
timeLimit = PT30M
testTimeLimit = PT3S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 0
scope = PACKAGE
needNotOutput = false
currentDirectory = /opt/apr-data/example/math081
================================================================
2019-06-12 18:40:27 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-06-12 18:40:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 2
Fitness: max 0.9411764705882353(1), min 0.8823529411764706(1), ave 0.9117647058823529
----------------------------------------------------------------

2019-06-12 18:40:30 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-06-12 18:40:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 10, syntax-valid 4, build-succeeded 1
Fitness: max 0.8235294117647058(1), min 0.8235294117647058(1), ave 0.8235294117647058
----------------------------------------------------------------

2019-06-12 18:40:32 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-06-12 18:40:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 10, syntax-valid 7, build-succeeded 1
Fitness: max 0.8235294117647058(1), min 0.8235294117647058(1), ave 0.8235294117647058
----------------------------------------------------------------

2019-06-12 18:40:34 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-06-12 18:40:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 10, syntax-valid 10, build-succeeded 3
Fitness: max 0.8823529411764706(2), min 0.8235294117647058(1), ave 0.8627450980392156
----------------------------------------------------------------

2019-06-12 18:40:39 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-06-12 18:40:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 10, syntax-valid 10, build-succeeded 2
Fitness: max 0.9411764705882353(1), min 0.5294117647058824(1), ave 0.7352941176470589
----------------------------------------------------------------

2019-06-12 18:40:42 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-06-12 18:40:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 10, syntax-valid 9, build-succeeded 5
Fitness: max 0.9411764705882353(1), min 0.47058823529411764(1), ave 0.6
----------------------------------------------------------------

2019-06-12 18:40:49 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-06-12 18:40:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 3
Fitness: max 0.9411764705882353(1), min 0.5294117647058824(1), ave 0.7647058823529411
----------------------------------------------------------------

2019-06-12 18:40:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-06-12 18:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 10, syntax-valid 8, build-succeeded 2
Fitness: max 0.9411764705882353(1), min 0.5294117647058824(1), ave 0.7352941176470589
----------------------------------------------------------------

2019-06-12 18:40:56 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-06-12 18:40:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 10, syntax-valid 5, build-succeeded 2
Fitness: max 1.0(1), min 0.9411764705882353(1), ave 0.9705882352941176
----------------------------------------------------------------

2019-06-12 18:40:59 [main] [INFO]  KGenProgMain - found enough solutions.
2019-06-12 18:40:59 [main] [INFO]  Patch - 
--- org.apache.commons.math.linear.EigenDecompositionImpl
+++ org.apache.commons.math.linear.EigenDecompositionImpl
@@ -830,10 +830,7 @@
             sumOffDiag += ei;
         }
 
-        if (sumOffDiag == 0) {
-            // matrix is already diagonal
-            return;
-        }
+        if (sumOffDiag == 0)
 
         // initial checks for splits (see Parlett & Marques section 3.3)
         flipIfWarranted(n, 2);
@@ -1098,7 +1095,7 @@
                     } else if (dMin1 > 0.0) {
                         // late failure. Gives excellent shift.
                         tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
-                        tType -= 11;
+                        tType -= 12;
                     } else {
                         // early failure. Divide by 4.
                         tau *= 0.25;
@@ -1481,7 +1478,6 @@
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
-                        b2 = work[nn - 5] / work[nn - 7];
                         np = nn - 9;
                     } else {
                         np = nn - 2 * pingPong;
@@ -1617,8 +1613,6 @@
                 }
             } else {
 
-                // case 9.
-                tau = 0.25 * dMin1;
                 if (dMin1 == dN1) {
                     tau = 0.5 * dMin1;
                 }
2019-06-12 18:41:00 [main] [INFO]  KGenProgMain - execution time: 33 seconds
2019-06-12 18:41:00 [main] [INFO]  KGenProgMain - Total Variants: generated 90, syntax-valid 69, build-succeeded 21


real 39.267
user 98.500
sys  1.885
